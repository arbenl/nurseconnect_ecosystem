rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection:
    // A user can only read or write their own document.
    // Assumes each user document has a 'uid' field matching their authentication UID.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Service Requests Collection:
    match /service_requests/{requestId} {

      // Allow any authenticated user (patient) to create a new service request.
      allow create: if request.auth != null && request.resource.data.patientId == request.auth.uid;

      // Allow reading a service request only if:
      // 1. The authenticated user is the patient who created the request (based on 'patientId' field).
      // OR
      // 2. The authenticated user is the nurse assigned to the request (based on 'assignedNurseId' field).
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.patientId ||
        request.auth.uid == resource.data.assignedNurseId
      );

      // Allow updating a service request only if:
      // 1. The authenticated user is the nurse assigned to the request (based on 'assignedNurseId' field).
      // This prevents patients from updating requests after creation and ensures only the assigned nurse can change status, etc.
      allow update: if request.auth != null && request.auth.uid == resource.data.assignedNurseId &&
                      request.resource.data.keys().hasOnly(['status', 'notes', 'assignedNurseId']);

      // Deny delete operations by default, as not specified in requirements.
      allow delete: if false;
    }
  }
}
